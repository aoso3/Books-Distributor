import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import main_classes.Author;
import main_classes.Book;

import java.util.ArrayList;

import javax.swing.AbstractListModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import javax.swing.JDialog;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.JLabel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Usama
 */
public class Author_Add extends javax.swing.JFrame {
	
	//private Author author = Intro.bd.getAuthorsByName().get(Authors.sel);
	private ArrayList<Book> all_books = Intro.bd.getBooksByName();
	public ArrayList<Book> new_books_array;
	
    /**
     * Creates new form Edit_A
     */
    public Author_Add() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jButton1 = new javax.swing.JButton();
        jButton1.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		new_books_array.add(all_books.get(all_books_list.getSelectedIndex()));
        		model.addElement(model2.getElementAt(all_books_list.getSelectedIndex()));
        	
        		//model2.removeElementAt(all_books_list.getSelectedIndex());
        	
        	}
        });

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        jTextField1.setText("");

        jTextField2.setText("");

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jButton1.setText("Add Book");
        
        list = new JList();
        list.setModel(new AbstractListModel() {
        	String[] values = new String[] {"a"};
        	public int getSize() {
        		return values.length;
        	}
        	public Object getElementAt(int index) {
        		return values[index];
        	}
        });
        
        list_1 = new JList();
        list_1.setModel(new AbstractListModel() {
        	String[] values = new String[] {"b", "c"};
        	public int getSize() {
        		return values.length;
        	}
        	public Object getElementAt(int index) {
        		return values[index];
        	}
        });

        
        
        model = new DefaultListModel<>();
        my_books_list = new JList<>( model );
        
//        for(Book book : author.books){        	
//        	model.addElement(book.getTitle());
//        }
//        
         model2 = new DefaultListModel<>();
         all_books_list =  new JList<>( model2 );
        
        
        
       for(Book book : all_books){        	
        	model2.addElement(book.getTitle());
        }
        
	    new_books_array = new ArrayList<>();

      
       
     
       
//      // JScrollPane scrollPane1 = new JScrollPane(list);
//       jScrollPane1.setViewportView(list);
//       jScrollPane1.setViewportView(my_books_list);
       //Author_Edit.add(scrollPane1);
       
        
        
        
        btnNewButton = new JButton("Save");
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		if(!jTextField1.getText().equals("") && !jTextField2.getText().equals("")){
        		new_author = new Author("first_name","last_name",null);
        		
        		new_author.setFirstName(jTextField1.getText());
        		new_author.setLastName(jTextField2.getText());
        		for(Book b:new_books_array)
        			new_author.addBook(b);
        			
        		Intro.bd.addAuthor(new_author);
        		
        		int rowCount = Authors.model.getRowCount();
        		for (int i = rowCount - 1; i >= 0; i--) {
        			Authors.model.removeRow(i);
        		}

        		Authors.model = (DefaultTableModel) Authors.jTable1.getModel();

        		for(Author author:Intro.bd.getAuthorsByName())
                Authors.model.addRow(new Object[]{author.getFirstName(),author.getLastName()});

        	}
        		else if(jTextField1.getText().equals("") && jTextField2.getText().equals("")){
        			JOptionPane.showMessageDialog(null,"Please Enter Author First and Last Name");
        		}
        		else if(jTextField1.getText().equals("")){
        			JOptionPane.showMessageDialog(null,"Please Enter Author First Name");
        		}
        		else if(jTextField2.getText().equals("")){
        			JOptionPane.showMessageDialog(null,"Please Enter Author Last Name");
        		}
        	}
        });
        
        btnDelete = new JButton("Delete");
        btnDelete.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		new_books_array.remove(my_books_list.getSelectedIndex());
        		//new_author.books.remove(new_author.books.get(my_books_list.getSelectedIndex()));
        		//model2.addElement(model.getElementAt(my_books_list.getSelectedIndex()));
        		model.removeElementAt(my_books_list.getSelectedIndex());
        	}
        });
        
        JLabel lblAuthorBooks = new JLabel();
        lblAuthorBooks.setText("Author's Books");
        
        lblAllBooks = new JLabel();
        lblAllBooks.setText("All Books");
        GroupLayout groupLayout = new GroupLayout(getContentPane());
        groupLayout.setHorizontalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(51)
        			.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
        			.addGap(31)
        			.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(51)
        			.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
        			.addGap(31)
        			.addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE))
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(30)
        					.addComponent(my_books_list, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(41)
        					.addComponent(lblAuthorBooks, GroupLayout.PREFERRED_SIZE, 81, GroupLayout.PREFERRED_SIZE)))
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING, false)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(27)
        					.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addGroup(groupLayout.createParallelGroup(Alignment.LEADING, false)
        						.addComponent(btnDelete, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        						.addComponent(jButton1, GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
        					.addGap(26)
        					.addComponent(all_books_list, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
        					.addGap(14)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(Alignment.TRAILING, groupLayout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addComponent(lblAllBooks, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
        					.addGap(33))))
        		.addGroup(Alignment.TRAILING, groupLayout.createSequentialGroup()
        			.addContainerGap(175, Short.MAX_VALUE)
        			.addComponent(btnNewButton)
        			.addGap(165))
        );
        groupLayout.setVerticalGroup(
        	groupLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(groupLayout.createSequentialGroup()
        			.addGap(21)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jLabel1)
        				.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(3)
        					.addComponent(jLabel2))
        				.addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(36)
        			.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblAllBooks)
        				.addComponent(lblAuthorBooks))
        			.addGap(26)
        			.addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(20)
        					.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(20)
        					.addComponent(jButton1)
        					.addGap(18)
        					.addComponent(btnDelete))
        				.addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
        					.addComponent(my_books_list, GroupLayout.PREFERRED_SIZE, 118, GroupLayout.PREFERRED_SIZE)
        					.addComponent(all_books_list, GroupLayout.PREFERRED_SIZE, 118, GroupLayout.PREFERRED_SIZE))
        				.addGroup(groupLayout.createSequentialGroup()
        					.addGap(20)
        					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        			.addGap(9)
        			.addComponent(btnNewButton)
        			.addContainerGap())
        );
        getContentPane().setLayout(groupLayout);

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Author_Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Author_Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Author_Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Author_Add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	Author_Add = new Author_Add();
                Author_Add.setVisible(true);
            }
        });
    }

    private static Author_Add  Author_Add;
    private DefaultListModel<String> model,model2;
    private Author new_author;
    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private JList list_1;
    private JList my_books_list;
    private JList all_books_list;
    private JList list;
    private JButton btnNewButton;
    private JButton btnDelete;
    private JLabel lblAllBooks;
}
